---
- name: install and enable EPEL
  yum: name=epel-release state=present
  when: centos_base_enable_epel

- name: install basic packages
  action: yum name={{ item }} state=installed
  with_items:
    - mercurial
    - git
    - gcc
    - kernel-devel
    - kernel-headers
    - sqlite-devel
    - sqlite
    - bzip2-devel
    - readline-devel
    - tcl-devel
    - libcurl
    - openssl-devel
    - zlib-static
    - python-virtualenv
    - postfix
    - yum-cron
    - yum-utils
    - supervisor
    - which
  when: centos_base_basic_packages

- name: install utility packages
  action: yum name={{ item }} state=installed
  with_items:
    - vim-enhanced
    - screen
    - cifs-utils
    - screen
    - htop
    - tree
    - wget
  when: centos_base_utility_packages

- name: install zlib packages from EPEL
  yum:
    name: '{{ item }}'
  with_items:
    - zlib-ada-devel
    - zlib-ada
  when:
    - centos_base_enable_epel
    - centos_base_basic_packages

- name: install debugging packages
  action: yum name={{ item }} state=installed
  with_items:
    - strace
  when: centos_base_debug_packages

- name: install packages specific to CentOS 6
  action: yum name={{ item }} state=installed
  with_items:
    - fail2ban
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6"

- name: install packages specific to CentOS 7
  action: yum name={{ item }} state=installed
  with_items:
    - firewalld
    - fail2ban-all
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: install the 'Development tools' package group
  yum: name="@Development tools" state=present
  when: centos_base_basic_packages

- name: Install SELinux packages
  yum:
    name: "{{ item }}"
  with_items:
    - policycoreutils
    - policycoreutils-python
    - selinux-policy
    - selinux-policy-targeted
    - libselinux-utils
    - setroubleshoot-server
    - setools
    - setools-console
    - mcstrans
  when: centos_base_selinux_packages

- name: Install Nagios packages
  yum:
    name: '{{ item }}'
  with_items:
    - perl-Net-XMPP
    - nsca
    - nsca-client
    - perl-LWP-Protocol-https
    - perl-libwww-perl
  when:
    - centos_base_nagios_packages
    - ansible_distribution_major_version == "7"

- name: vim alias
  lineinfile: dest=/root/.bashrc line="alias vi=vim" state=present
  when: centos_base_basic_vim_tweaks

- name: Setup some vim defaults
  template: dest=/root/ src=root/.vimrc
  when: centos_base_basic_vim_tweaks

- name: LOCKPRG to avoid locking of GNU screen sessions
  lineinfile: dest=/root/.bashrc line='export LOCKPRG="/bin/true"' state=present
  when: centos_base_lockprg

- name: create htop direcotry
  file:
    path: /root/.config/htop
    state: directory
  when: centos_base_htop_configuration

- name: Configure htop
  copy:
    src: root/.config/htop/htoprc
    dest: /root/.config/htop
  when: centos_base_htop_configuration

- name: Add fail2ban to startup
  service: name=fail2ban state=started enabled=yes
  when: centos_base_fail2ban_configuration

- name: Secure Fail2ban config
  template: src=etc/fail2ban/jail.local dest=/etc/fail2ban
  when: centos_base_fail2ban_configuration

- name: Secure SSH config
  template: src=etc/ssh/sshd_config dest=/etc/ssh
  notify: sshd restart
  when: centos_base_secure_sshd

- name: Firewalld service
  service: name=firewalld state=started enabled=yes
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Enable firewalld services
  firewalld:
    permanent: "{{ item[1] }}"
    service: "{{ item[0] }}"
    state: enabled
    zone: public
  with_nested:
    - '{{ centos_base_firewalld_services }}'
    - [yes, no]
  notify:
    - firewalld restart
  when:
    - ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"
    - centos_base_firewalld_services
